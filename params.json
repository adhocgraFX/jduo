{"name":"Jduo","tagline":"super lightweight off-canvas sketch for rwd templates","body":"jduo\r\n====\r\n\r\n### Super lightweight off-canvas sketch for rwd templates.\r\n\r\nJduo ist eine kleine Skizze einer möglichst einfach zu implementierenden off-canvas Funktionalität.\r\n\r\ninspired by codrops Blueprint: Slide and push Menus https://github.com/codrops/Blueprint-SlidePushMenus\r\n\r\n### How to ..\r\n\r\nNotwendig sind folgende 2 Dateien:\r\n\r\n* classie.min.js: 0.56 kb\r\n* off-canvas.less > off-canvas.css: 2.50 kb\r\n* = 3.06 kb\r\n\r\nAlle weiteren less Dateien beziehen sich auf das Layout der Demo.\r\n\r\nIn der index.html wird gezeigt, wie den beiden Elementen nav und aside die off-canvas Funktionalität zugewiesen wird.\r\n\r\n### Das Grundprinzip\r\n\r\nIn den üblichen grid-layouts besitzen die container-divs im Allgemeinen die Eigenschaften float: left und position: relative.\r\nIm mobile first Ansatz wird die Breite auf width: 100% gesetzt.\r\nSie wird mittels media queries dann für größere devices differenziert, z.B. in ein 2-Spaltensystem von 66.66% zu 33.33%.\r\nDie container-divs, die man für kleinere devices in den off-canvas setzen will, muss man nun für die schmalen Breiten via media queries aus diesem System herausbrechen, indem man ihnen position: absolute zuweist.\r\nDas ist im Prinzip alles.\r\n\r\nFunktioniert auf allen Browsern, die media queries und javascript verstehen.\r\n\r\nFür den Fall der Fälle habe ich eine einfache .js > .no-js (modernizr) Variante als fallback beigefügt:\r\n\r\n* Grids werden für kleine devices auf float: left, position: relative und width: 100% gesetzt,\r\ndann werden alle container-divs vertikal aufgereiht dargestellt.\r\n* Toggler buttons werden unsichtbar gesetzt.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}